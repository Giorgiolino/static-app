
name: continuous-delivery

# This workflow runs when any of the following occur:
# - A push is made to any branch
# - A tag formatted as "*.*.*" is created
# - A pull request is created or updated
on:
  push:
    branches: ["*"]
    # Publish semver tags as releases.
    tags: ["*.*.*"]
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Get repository name
        run: |
          GITHUB_REPOSITORY_LOWERCASED=$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')
          echo "IMAGE_NAME=${GITHUB_REPOSITORY_LOWERCASED#*/}" >> $GITHUB_ENV
          echo "IMAGE_REPO=${GITHUB_REPOSITORY_LOWERCASED%/*}" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_REPO/$IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}
          IS_LATEST=

          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && IS_LATEST=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo IS_LATEST=$IS_LATEST

          docker tag $IMAGE_REPO/$IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          # Tag latest if branch main
          [ "$IS_LATEST" == "latest" ] && docker tag $IMAGE_REPO/$IMAGE_NAME $IMAGE_ID:latest
          [ "$IS_LATEST" == "latest" ] && docker push $IMAGE_ID:latest
